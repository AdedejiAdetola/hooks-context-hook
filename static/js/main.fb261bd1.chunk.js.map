{"version":3,"sources":["components/NewSongForm.js","components/SongList.js","App.js","reportWebVitals.js","index.js"],"names":["AddNewSong","addSongs","useState","title","setTitle","onSubmit","e","preventDefault","type","required","value","onChange","target","SongList","id","songs","setSongs","add","useEffect","console","log","map","song","uuid","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAqBeA,EAnBI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,EAA0BC,mBAAS,OAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OACI,8BACI,uBAAMC,SARO,SAACC,GAClBA,EAAEC,iBACFN,EAASE,GACTC,EAAS,KAKL,UACI,gDACA,uBAAOI,KAAK,OAAOC,UAAQ,EAACC,MAAOP,EAAOQ,SAAU,SAACL,GAAD,OAAOF,EAASE,EAAEM,OAAOF,UAC7E,uBAAOF,KAAK,SAASE,MAAM,mBCqB5BG,EAhCE,WACb,MAA0BX,mBAAS,CAC/B,CAACC,MAAO,cAAeW,GAAI,GAC3B,CAACX,MAAO,qBAAsBW,GAAI,GAClC,CAACX,MAAO,gBAAiBW,GAAI,KAHjC,mBAAOC,EAAP,KAAcC,EAAd,KASA,EAAsBd,mBAAS,IAA/B,mBAAOe,EAAP,UAOA,OANAC,qBAAU,WACR,OAAOC,QAAQC,IAAI,wBAClB,CAACH,IACJC,qBAAU,WACN,OAAOC,QAAQC,IAAI,yBAClB,CAACL,IAEF,gCACI,6BACKA,EAAMM,KAAI,SAAAC,GACP,OACI,6BAAoBA,EAAKnB,OAAfmB,EAAKR,SAI3B,cAAC,EAAD,CAAYb,SAnBJ,SAACE,GACba,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACZ,MAAOA,EAAOW,GAAIS,iBCAhCC,MATf,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb261bd1.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst AddNewSong = ({ addSongs }) => {\r\n    const [title, setTitle] = useState('set');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addSongs(title);\r\n        setTitle('');\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Song Title:</label>\r\n                <input type=\"text\" required value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                <input type=\"submit\" value=\"Add Song\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default AddNewSong;","import { useState, useEffect } from 'react';\r\nimport uuid from 'uuid/dist/v1';\r\nimport AddNewSong from './NewSongForm';\r\n\r\nconst SongList = () => {\r\n    const [songs, setSongs] = useState([\r\n        {title: 'almost home', id: 1},\r\n        {title: 'this wild darkness', id: 2},\r\n        {title: 'memory gospel', id: 3}\r\n    ]);\r\n\r\n    const addSong = (title) => {\r\n        setSongs([...songs, {title: title, id: uuid()}]);\r\n    }\r\n    const [add, setAdd] = useState(20);\r\n    useEffect(() => {\r\n      return(console.log('use Effect ran add'))\r\n    }, [add]);\r\n    useEffect(() => {\r\n        return(console.log('use Effect ran song'))\r\n      }, [songs]);\r\n    return ( \r\n        <div>\r\n            <ul>\r\n                {songs.map(song => {\r\n                    return (\r\n                        <li key= {song.id}>{song.title}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <AddNewSong addSongs={addSong }/> \r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SongList;\r\n","import SongList from \"./components/SongList\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SongList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}